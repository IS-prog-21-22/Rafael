#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#define MAX32 4294967295U
//#define MAX32 1000000000U

typedef struct
{
    uint32_t part [32];
} uint1024_t;

uint1024_t from_uint(unsigned int x); // ãåíåðàöèÿ èç ÷èñëà
uint1024_t add_op(uint1024_t x, uint1024_t y); //ñëîæåíèå
uint1024_t subtr_op(uint1024_t x, uint1024_t y); // âû÷èòàíèå
uint1024_t mult_op(uint1024_t x, uint1024_t y); //óìíîæåíèå
void printf_value(uint1024_t x); // âûâîä
void scanf_value(uint1024_t* x); //ââîä

uint1024_t from_uint(unsigned int x) // ãåíåðàöèÿ èç ÷èñëà
{
    uint1024_t n;
    n.part[0]=x;
    for (short i=1; i<32; i++)
        n.part[i]=0;
    return n;
}

uint1024_t add_op(uint1024_t x, uint1024_t y) // ñëîæåíèå
{
    uint1024_t z;
    short t=0;
    for (short i=0; i<32; i++)
    {
        if (((int64_t)y.part[i]) + x.part[i] + t > MAX32)
        {
            z.part[i]=x.part[i]+y.
            t=1
        }
        else
        {
            z.part[i]=x.part[i]+y.part
            t=0
        }
    }
    return
}
uint1024_t subtr_op(uint1024_t x, uint1024_t y) // âû÷èòàíèå
{
    uint1024_t z;
    short t = 0;
    for (short i=0; i<32
    {
        if (((int64_t)x.part[i])-t<y.part[i])
        {
            z.part[i]=x.part[i]-y.part[i]-t;
            t=1;
        }
        else
        {
            z.part[i]=x.part[i]-y.part[i]-t;
            t=0;
        }
    }
    return z;
}

uint1024_t mult_op(uint1024_t x, uint1024_t y) //óìíîæåíèå
{
    uint1024_t res = from_uint(0);

    uint1024_t z;

    for (short j=0; j<32; j++) {
        uint32_t per=0;
        z = from_uint(0);
        for (int i=0; i+j<32; i++) {
            z.part[i+j]=x.part[i]*y.part[j]+per;
            per=((((uint64_t)x.part[i])*y.part[j]+per) >> 32
        }
        res = add_op(res, z);
    }
    return res;
}

uint1024_t div_uint(uint1024_t x, uint32_t y) {
    uint64_t res = 0;
    uint1024_t z = from_uint(0);
    for (int i = 31; i >= 0; i--)
    {
        res <<= 32;
        res += x.part[i];
        z.part[i] = res / y;
        res %= y;
    }
    return z;
}

void printf_value_req(uint1024_t x) {
    int c = 10;
    uint1024_t z = div_uint(x, c);
    int a = subtr_op(x, mult_op(z, from_uint(c))).part[0];
    x = z;

    int flag = 1;
    for (int i = 0; i < 32; i++) {
        if (x.part[i] != 0) {
            flag = 0;
        }
    }
    if (flag) {
        printf("%d", a);
        return;
    }
    printf_value_req(x);
    printf("%d", a);

}

void printf_value(uint1024_t x) // âûâîä
{
    printf_value_req(x);
    printf("\n");

    /*
    for (short i=31;i>=0;i--){
        printf("%u    ",x.part[i]);
    }
    printf("\n");       */
}
void scanf_value(uint1024_t* x) //ââîä
{
    int c;
    *x=from_uint(0);
    uint1024_t y=from_uint(10);
    while ((c=getchar())!='\n'
    {
        *x=mult_op(*x,y);
        //printf("1: %u\n", x->part[0]);
        //printf("2: %u\n", x->part[1]);
        //printf("\n");
        *x=add_op(*x,from_uint(c-'0'));
    }
}
int main()
{
    //unsigned int z;
    //scanf("%u",&z);
    //printf_value(from_uint(z));

    uint1024_t x,y;
    //scanf_value(&z);
    printf("Pervaa peremennaa\n");
    scanf_value(&x);
    printf_value(x);
    printf("Vtoraa peremennaa\n");
    scanf_value(&y);
    printf("add\n");
    printf_value(add_op(x,y));
    printf("subtr\n");
    printf_value(subtr_op(x,y));
    printf("mult\n");
    printf_value(mult_op(x,y));
    return 0;
}
